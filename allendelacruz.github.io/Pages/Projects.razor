@page "/projects"
@inject IJSUtilityService JSUtilityService
@inject NavigationManager Navigation

<h3 class="text-center p-4">Projects</h3>
<div class="container d-flex justify-content-center pb-3">
    <div class="row">
        <div class="d-none d-sm-none d-md-block d-xl-block col pr-1 pt-2">
            Filter By:
        </div>
        <div class="d-block d-sm-block d-md-none d-xl-none col-left pl-1">
            Filter By:
        </div>
        <div class="col-md-auto pl-1">
            <select class="form-control textbox-color" @onchange="SelectFilter">
                <option value="0">
                    --Select a filter--
                </option>
                @foreach (var techStack in techStackRepository.GetTechStacks())
                {
                    <option value="@Convert.ToString((int)techStack.Id)">
                        @techStack.Name
                    </option>
                }
            </select>
        </div>
    </div>
</div>
@if (techStackFilters.Count > 0)
{
    <div class="container d-flex justify-content-center">
        <div class="pt-2" style="width: 50%; margin: 0 auto;">
            @foreach (var t in techStackFilters)
            {
                <span @key="t.Id" class="text-white bg-dark rounded p-1 pt-0 pb-0 m-1 d-inline-block h6" style="font-size: 10px;">@t.Name <button class="btn p-0 text-danger" @onclick="@(() => RemoveFilter(t))"><i class="fas fa-times"></i></button></span>
            }
        </div>
    </div>
}

<div class="pb-4"></div>

@if (projects.Count > 0)
{
    <div class="row">
        @foreach (var project in projects)
        {
            <ProjectThumb Project="project" />
        }
    </div>
}
else
{
    @if (techStackFilters.Count > 0)
    {
        <span class="text-danger text-center justify-content-center d-flex">NO RECORDS FOUND</span>
    }
}

@code {
    private List<Project> projects = new();
    private List<TechStack> techStackFilters = new();
    private ProjectRepository projectRepository = new();
    private TechStackRepository techStackRepository = new();
    private int SelectedTechStack = 0;

    private void BindGrid()
    {
        var url = Navigation.RemoveQueryStringByKey("f");

        if (techStackFilters.Count > 0)
        {
            projects.Clear();

            foreach (var project in projectRepository.GetProjects())
            {
                var filteredProject = project.TechStacks.Where(s => techStackFilters.Any(s2 => s2.Id == s.Id));

                if (filteredProject.Select(f => f.Id).OrderBy(f => f).ToList()
                    .SequenceEqual(techStackFilters.Select(f => f.Id).OrderBy(f => f).ToList()))
                {
                    if (!projects.Any(p => p == project))
                        projects.Add(project);
                }
            }

            var filter = new Dictionary<string, string> { { "f", HttpUtility.UrlEncode(string.Join(",", techStackFilters.Select(f => f.Id).ToList())) } };
            Navigation.NavigatewithQueryString(url, filter);
        }
        else
        {
            projects = projectRepository.GetProjects().ToList();
            Navigation.NavigateTo(url);
        }
    }

    protected override void OnInitialized()
    {
        Navigation.TryGetQueryString<string>("f", out string f);
        if (!string.IsNullOrWhiteSpace(f))
        {
            HttpUtility.UrlDecode(f)
                .Split(new[] { "," }, StringSplitOptions.RemoveEmptyEntries).ToList()
                .ForEach(f =>
                {
                    var techStack = techStackRepository.GetTechStack((TechStackEnum)Enum.Parse(typeof(TechStackEnum), f));
                    techStackFilters.Add(techStack);
                });
        }

        BindGrid();

        base.OnInitialized();
    }

    async void SelectFilter(ChangeEventArgs e)
    {
        if (e.Value.ToString().Equals("0"))
        {
            await JSUtilityService.DisplayAlert("Please select a filter.");
        }
        else
        {
            var techStack = techStackRepository.GetTechStack((TechStackEnum)Enum.Parse(typeof(TechStackEnum), e.Value.ToString()));

            if (techStackFilters.Any(t => t.Id == techStack.Id))
            {
                await JSUtilityService.DisplayAlert("Filter aleady exist.");
                return;
            }

            techStackFilters.Add(techStack);

            BindGrid();
        }
    }

    private void RemoveFilter(TechStack techStack)
    {
        techStackFilters.Remove(techStack);
        BindGrid();
    }
}